== сравнивает ссылки на объекты

equals - структурный способ сравнения объектов

наследование => можно переопределить методы класса родителя в классах потомках

отличие абстрактного метода от переопределенного

перегрузка методов(параметры)

конструкторы не наследуются

интерфейс - контракт на выполение каких либо действий. это то что класс умеет делать.

абстрактный класс - это то чем класс является



J APP

JVM

OS

DRIVERS

HARDWARE

отличие абстр классов от интерфейсов

отличие                           от
абстр классов               <=============>         интерфейсов
может содержать и пустые                  только инициализир константы
заполненые переменные                         final static

содержит как пустые                             содержит только сигнатуры методов
так и реализ методы                           которые требуют реализации

наследуется только один абстр класс             можно реализовать множество интерфейсов


может наследовать другой класс              интерфейс может расширять другой интерфейс
и реализовать интерфейс                     но не может наследовать класс

множественное наследование зарпещено, однако множественная реализация разрешена.


A a = new A();
A b = new A();

if(a == b) мы получим false; == the same сравнивает ссылочные одинаковые ли у них ссылки.
примитивы сравнивает по значениям

float - в бизнесс программировании не используется. а используется для мат. вычислений в рокет сайнс например.
т.к. числа не сравнить они будут разные. деньги в них не считаются.

float a = 1,3;
float b = 1,3;
if(a == b) result is unpredictable

money это всегда long или int!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

для сравнения объектов используется метод equals();
if(a.equals(b)){}

проверка на налл в 'a' и 'b'


если объекты одинаковые у них одинаковый хэш-код
если хэш-код разный - эти объекты разные по-любому.


сначала проверяем хэшкодом. если одинаковые тогда проверяем икволсом.


getClass() - ReflectionFramework. метаинформация о классе.

wait, notify, notifyall - многопоточность.

thread - запуск процесса в новом потоке. через метод run().

синхронизация потоков. - synchronized - модификатор доступа - ожидание завершения потока.
в методе. завершился поток зашел следующий.

synchronize(this) - объект.

Collection Framework!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Iterable

Итератор имеет методы:
getNext
hasNext

Collection - интерфейс
любой умеет 3: include, remove, add.

Основные интерфейсы коллекш фреймворка - set,  list, map.

Интерфейс Map(K,V) - это ассоциативный массив по ключю
где К - это любой объект. только объект.
ключом не может быть налл а значением может.


 Iterator - можно создать свой итератор

 hashset - нужен для того в коллекции были только уникальные значения. но он не
 гарантирует порядка внесения элементов в список
 treeset - тоже что hashset только сортированный
 linkedhashset - hashset только с порядком внесения элементов в список.

 list

 отличия:
 arraylist - содержит внутри эррей. используется когда нужен быстрый доступ к эл-там.
 linkedlist - связанный список. имеет ссылку на след элемент. медленнее.
 что бы добраться до какого то элемента нужно пройтись по элементам получая ссылку
 на каждый послед эл что бы добраться до нужного.
например вставку выгоднее делать в линкедлист в любом случае.
не важно в каком месте вставлюятся элементы в начале середине или конце списка.
в эррейлисте нужно будет копиповать весь массив в новый с увелич размером.
передвинуть необ колво элментов вправо.

поиск - эррейлист
ремув - линкедлист.


мап
ассоциативный массив
hashmap
treemap
linkedhasmap

List<string> l = new ArrayList();


